/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> =
  T extends ColumnType<infer S, infer I, infer U>
    ? ColumnType<S, I | undefined, U>
    : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Post {
  /**
   * Content of post
   */
  content: string;
  /**
   * Create date
   */
  createdAt: Timestamp | null;
  id: Generated<string>;
  /**
   * Title of post
   */
  title: string;
  /**
   * Update date
   */
  updatedAt: Timestamp | null;
  /**
   * User id
   */
  userId: string;
}

export interface User {
  /**
   * Create date
   */
  createdAt: Timestamp | null;
  /**
   * email address of user
   */
  email: string;
  id: Generated<string>;
  /**
   * Name of user
   */
  name: string;
  /**
   * Role IDs of the character
   */
  roles: string[] | null;
  /**
   * Update date
   */
  updatedAt: Timestamp | null;
}

export interface DB {
  Post: Post;
  User: User;
}
