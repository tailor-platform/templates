// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/tailor-inc/platform-core-services/api/gen/go/tailordb/v1

package tailordbv1

#PermitAction: int32 // #enumPermitAction

#enumPermitAction:
	#PermitAction_PERMIT_ACTION_UNSPECIFIED |
	#PermitAction_PERMIT_ACTION_ALLOW |
	#PermitAction_PERMIT_ACTION_SKIP |
	#PermitAction_PERMIT_ACTION_DENY

#values_PermitAction: {
	PermitAction_PERMIT_ACTION_UNSPECIFIED: #PermitAction_PERMIT_ACTION_UNSPECIFIED
	PermitAction_PERMIT_ACTION_ALLOW:       #PermitAction_PERMIT_ACTION_ALLOW
	PermitAction_PERMIT_ACTION_SKIP:        #PermitAction_PERMIT_ACTION_SKIP
	PermitAction_PERMIT_ACTION_DENY:        #PermitAction_PERMIT_ACTION_DENY
}

#PermitAction_PERMIT_ACTION_UNSPECIFIED: #PermitAction & 0
#PermitAction_PERMIT_ACTION_ALLOW:       #PermitAction & 1
#PermitAction_PERMIT_ACTION_SKIP:        #PermitAction & 2
#PermitAction_PERMIT_ACTION_DENY:        #PermitAction & 3

#Namespace: {
	name?:            string @go(Name) @protobuf(1,bytes,opt,proto3)
	defaultTimezone?: string @go(DefaultTimezone) @protobuf(3,bytes,opt,name=default_timezone,json=defaultTimezone,proto3)
}

#Manifests: {
	namespace?: string @go(Namespace) @protobuf(1,bytes,opt,proto3)
	manifest?: [...null | #Manifest] @go(Manifest,[]*Manifest) @protobuf(2,bytes,rep,proto3)
}

#Manifest: {
	name?:   string             @go(Name) @protobuf(2,bytes,opt,proto3)
	schema?: null | #TypeConfig @go(Schema,*TypeConfig) @protobuf(3,bytes,opt,proto3)
}

#TypeConfig: {
	fields?: {[string]: null | #FieldConfig} @go(Fields,map[string]*FieldConfig) @protobuf(1,map[bytes]bytes,rep,proto3)
	description?: string              @go(Description) @protobuf(2,bytes,opt,proto3)
	settings?:    null | #TypeSetting @go(Settings,*TypeSetting) @protobuf(3,bytes,opt,proto3)
	permission?:  null | #Permission  @go(Permission,*Permission) @protobuf(4,bytes,opt,proto3)
	extends?:     bool                @go(Extends) @protobuf(5,varint,opt,proto3)
	directives?: {[string]: null | #Directive} @go(Directives,map[string]*Directive) @protobuf(6,map[bytes]bytes,rep,proto3)
	indexes?: {[string]: null | #Index} @go(Indexes,map[string]*Index) @protobuf(7,map[bytes]bytes,rep,proto3)
	recordPermission?: null | #Permission @go(RecordPermission,*Permission) @protobuf(8,bytes,opt,name=record_permission,json=recordPermission,proto3)
}

#TypeSetting: {
	versioning?:            bool         @go(Versioning) @protobuf(1,varint,opt,proto3)
	aggregation?:           bool         @go(Aggregation) @protobuf(2,varint,opt,proto3)
	bulkUpsert?:            bool         @go(BulkUpsert) @protobuf(3,varint,opt,name=bulk_upsert,json=bulkUpsert,proto3)
	defaultQueryLimitSize?: null | int64 @go(DefaultQueryLimitSize,*int64) @protobuf(4,varint,opt,name=default_query_limit_size,json=defaultQueryLimitSize,proto3,oneof)
	maxBulkUpsertSize?:     null | int64 @go(MaxBulkUpsertSize,*int64) @protobuf(5,varint,opt,name=max_bulk_upsert_size,json=maxBulkUpsertSize,proto3,oneof)
}

#Directive: {
	name?: string @go(Name) @protobuf(1,bytes,opt,proto3)
	args?: [...null | #DirectiveArg] @go(Args,[]*DirectiveArg) @protobuf(2,bytes,rep,proto3)
}

#DirectiveArg: {
	name?:  string @go(Name) @protobuf(1,bytes,opt,proto3)
	value?: string @go(Value) @protobuf(2,bytes,opt,proto3)
}

#Index: {
	fieldNames: [...string] @go(FieldNames,[]string) @protobuf(1,bytes,rep,name=field_names,json=fieldNames,proto3)
	unique?: bool @go(Unique) @protobuf(2,varint,opt,proto3)
}

#FieldConfig: {
	type?: string @go(Type) @protobuf(1,bytes,opt,proto3)
	values?: [...string] @go(Values,[]string) @protobuf(2,bytes,rep,proto3)
	description?:  string                    @go(Description) @protobuf(3,bytes,opt,proto3)
	sourceId?:     string                    @go(SourceId) @protobuf(4,bytes,opt,name=source_id,json=sourceId,proto3)
	required?:     bool                      @go(Required) @protobuf(5,varint,opt,proto3)
	defaultValue?: null | #FieldDefaultValue @go(DefaultValue,*FieldDefaultValue) @protobuf(6,bytes,opt,name=default_value,json=defaultValue,proto3)
	array?:        bool                      @go(Array) @protobuf(7,varint,opt,proto3)
	validate?: [...null | #ValidateConfig] @go(Validate,[]*ValidateConfig) @protobuf(8,bytes,rep,proto3)
	fields?: {[string]: null | #FieldConfig} @go(Fields,map[string]*FieldConfig) @protobuf(9,map[bytes]bytes,rep,proto3)
	index?:           bool              @go(Index) @protobuf(10,varint,opt,proto3)
	unique?:          bool              @go(Unique) @protobuf(11,varint,opt,proto3)
	foreignKey?:      bool              @go(ForeignKey) @protobuf(12,varint,opt,name=foreign_key,json=foreignKey,proto3)
	foreignKeyType?:  string            @go(ForeignKeyType) @protobuf(13,bytes,opt,name=foreign_key_type,json=foreignKeyType,proto3)
	foreignKeyField?: string            @go(ForeignKeyField) @protobuf(14,bytes,opt,name=foreign_key_field,json=foreignKeyField,proto3)
	hooks?:           null | #FieldHook @go(Hooks,*FieldHook) @protobuf(15,bytes,opt,proto3,oneof)
}

#FieldHook: {
	createExpr?: null | string @go(CreateExpr,*string) @protobuf(1,bytes,opt,name=create_expr,json=createExpr,proto3,oneof)
	updateExpr?: null | string @go(UpdateExpr,*string) @protobuf(2,bytes,opt,name=update_expr,json=updateExpr,proto3,oneof)
}

#FieldDefaultValue: {
	stringValue?: null | string  @go(StringValue,*string) @protobuf(1,bytes,opt,name=string_value,json=stringValue,proto3,oneof)
	intValue?:    null | int64   @go(IntValue,*int64) @protobuf(2,varint,opt,name=int_value,json=intValue,proto3,oneof)
	floatValue?:  null | float32 @go(FloatValue,*float32) @protobuf(3,fixed32,opt,name=float_value,json=floatValue,proto3,oneof)
	boolValue?:   null | bool    @go(BoolValue,*bool) @protobuf(4,varint,opt,name=bool_value,json=boolValue,proto3,oneof)
	exprValue?:   null | string  @go(ExprValue,*string) @protobuf(5,bytes,opt,name=expr_value,json=exprValue,proto3,oneof)
}

#ValidateConfig: {
	range?: [...int64] @go(Range,[]int64) @protobuf(1,varint,rep,packed,proto3)
	length?: [...int64] @go(Length,[]int64) @protobuf(2,varint,rep,packed,proto3)
	compare?: [...string] @go(Compare,[]string) @protobuf(3,bytes,rep,proto3)
	expr?:         string        @go(Expr) @protobuf(4,bytes,opt,proto3)
	action?:       #PermitAction @go(Action) @protobuf(5,varint,opt,proto3,enum=tailordb.v1.PermitAction)
	errorMessage?: string        @go(ErrorMessage) @protobuf(6,bytes,opt,name=error_message,json=errorMessage,proto3)
}

#Permission: {
	create?: [...null | #PermissionItem] @go(Create,[]*PermissionItem) @protobuf(1,bytes,rep,proto3)
	read?: [...null | #PermissionItem] @go(Read,[]*PermissionItem) @protobuf(2,bytes,rep,proto3)
	update?: [...null | #PermissionItem] @go(Update,[]*PermissionItem) @protobuf(3,bytes,rep,proto3)
	delete?: [...null | #PermissionItem] @go(Delete,[]*PermissionItem) @protobuf(4,bytes,rep,proto3)
	admin?: [...null | #PermissionItem] @go(Admin,[]*PermissionItem) @protobuf(5,bytes,rep,proto3)
}

#PermissionItem: {
	permit?: #PermitAction @go(Permit) @protobuf(1,varint,opt,proto3,enum=tailordb.v1.PermitAction)
	id?:     string        @go(Id) @protobuf(2,bytes,opt,proto3)
}
