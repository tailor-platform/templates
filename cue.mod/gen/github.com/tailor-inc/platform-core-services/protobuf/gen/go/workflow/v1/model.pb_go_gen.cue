// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/tailor-inc/platform-core-services/protobuf/gen/go/workflow/v1

package workflowv1

import "google.golang.org/protobuf/types/known/timestamppb"

#WorkflowEventType: int32 // #enumWorkflowEventType

#enumWorkflowEventType:
	#WorkflowEventType_WORKFLOW_CREATED |
	#WorkflowEventType_TICKET_CREATED |
	#WorkflowEventType_TICKET_TRANSITION

#values_WorkflowEventType: {
	WorkflowEventType_WORKFLOW_CREATED:  #WorkflowEventType_WORKFLOW_CREATED
	WorkflowEventType_TICKET_CREATED:    #WorkflowEventType_TICKET_CREATED
	WorkflowEventType_TICKET_TRANSITION: #WorkflowEventType_TICKET_TRANSITION
}

#WorkflowEventType_WORKFLOW_CREATED:  #WorkflowEventType & 0
#WorkflowEventType_TICKET_CREATED:    #WorkflowEventType & 1
#WorkflowEventType_TICKET_TRANSITION: #WorkflowEventType & 2

#Activation: {
	id?: string @go(Id) @protobuf(1,bytes,opt,proto3)
	workflowAdmins?: [...string] @go(WorkflowAdmins,[]string) @protobuf(2,bytes,rep,name=workflow_admins,json=workflowAdmins,proto3)
	workflowViewers?: [...string] @go(WorkflowViewers,[]string) @protobuf(3,bytes,rep,name=workflow_viewers,json=workflowViewers,proto3)
}

// Approver
#Approver: {
	id?:          string @go(Id) @protobuf(1,bytes,opt,proto3)
	displayName?: string @go(DisplayName) @protobuf(2,bytes,opt,proto3)
	condition?:   string @go(Condition) @protobuf(3,bytes,opt,proto3)
}

// Workflow
#Workflow: {
	id?:   string @go(Id) @protobuf(1,bytes,opt,proto3)
	name?: string @go(Name) @protobuf(2,bytes,opt,proto3)
	steps?: [...null | #Step] @go(Steps,[]*Step) @protobuf(3,bytes,rep,proto3)
	startAt?:  null | timestamppb.#Timestamp @go(StartAt,*timestamppb.Timestamp) @protobuf(101,bytes,opt,name=start_at,json=startAt,proto3)
	endAt?:    null | timestamppb.#Timestamp @go(EndAt,*timestamppb.Timestamp) @protobuf(102,bytes,opt,name=end_at,json=endAt,proto3)
	createAt?: null | timestamppb.#Timestamp @go(CreateAt,*timestamppb.Timestamp) @protobuf(103,bytes,opt,name=create_at,json=createAt,proto3)
}

// Workflow Step
#Step: {
	id?:   string @go(Id) @protobuf(1,bytes,opt,proto3)
	name?: string @go(Name) @protobuf(3,bytes,opt,proto3)
	approvers?: [...null | #Approver] @go(Approvers,[]*Approver) @protobuf(4,bytes,rep,proto3)
	transitions?: {[string]: string} @go(Transitions,map[string]string) @protobuf(6,map[bytes]bytes,rep,proto3)
}

// Ticket is the current state od workflow step
#Ticket: {
	id?:            string                        @go(Id) @protobuf(1,bytes,opt,proto3)
	name?:          string                        @go(Name) @protobuf(2,bytes,opt,proto3)
	identifier?:    string                        @go(Identifier) @protobuf(3,bytes,opt,proto3)
	currentStepId?: string                        @go(CurrentStepId) @protobuf(4,bytes,opt,name=current_step_id,json=currentStepId,proto3)
	workflow?:      null | #Workflow              @go(Workflow,*Workflow) @protobuf(5,bytes,opt,proto3)
	createdAt?:     null | timestamppb.#Timestamp @go(CreatedAt,*timestamppb.Timestamp) @protobuf(100,bytes,opt,name=created_at,json=createdAt,proto3)
	updatedAt?:     null | timestamppb.#Timestamp @go(UpdatedAt,*timestamppb.Timestamp) @protobuf(102,bytes,opt,name=updated_at,json=updatedAt,proto3)
	expireAt?:      null | timestamppb.#Timestamp @go(ExpireAt,*timestamppb.Timestamp) @protobuf(101,bytes,opt,name=expire_at,json=expireAt,proto3)
}

// Ticket Approval history
#ApprovalHistory: {
	id?:        string                        @go(Id) @protobuf(1,bytes,opt,proto3)
	stepId?:    string                        @go(StepId) @protobuf(2,bytes,opt,name=step_id,json=stepId,proto3)
	action?:    string                        @go(Action) @protobuf(3,bytes,opt,proto3)
	approver?:  string                        @go(Approver) @protobuf(4,bytes,opt,proto3)
	createdAt?: null | timestamppb.#Timestamp @go(CreatedAt,*timestamppb.Timestamp) @protobuf(100,bytes,opt,name=created_at,json=createdAt,proto3)
}

#WorkflowEvent: {
	expireAt?:   #WorkflowEventType @go(EventType) @protobuf(1,varint,opt,name=event_type,json=eventType,proto3,enum=workflow.v1.WorkflowEventType)
	workflowId?: string             @go(WorkflowId) @protobuf(2,bytes,opt,name=workflow_id,json=workflowId,proto3)
	ticketId?:   string             @go(TicketId) @protobuf(3,bytes,opt,name=ticket_id,json=ticketId,proto3)

	// Types that are assignable to Detail:
	//	*WorkflowEvent_WorkflowCreated
	//	*WorkflowEvent_TicketCreated
	//	*WorkflowEvent_TicketTransition
	Detail: _#isWorkflowEvent_Detail
}

_#isWorkflowEvent_Detail: _

#WorkflowEvent_WorkflowCreated: {
	workflowCreated?: null | #WorkflowCreated @go(WorkflowCreated,*WorkflowCreated) @protobuf(4,bytes,opt,name=workflow_created,json=workflowCreated,proto3,oneof)
}

#WorkflowEvent_TicketCreated: {
	ticketCreated?: null | #TicketCreated @go(TicketCreated,*TicketCreated) @protobuf(5,bytes,opt,name=ticket_created,json=ticketCreated,proto3,oneof)
}

#WorkflowEvent_TicketTransition: {
	ticketTransition?: null | #TicketTransition @go(TicketTransition,*TicketTransition) @protobuf(6,bytes,opt,name=ticket_transition,json=ticketTransition,proto3,oneof)
}

#WorkflowCreated: {
	workflowId?: string @go(WorkflowId) @protobuf(1,bytes,opt,name=workflow_id,json=workflowId,proto3)
}

#TicketCreated: {
	ticketId?: string @go(TicketId) @protobuf(1,bytes,opt,name=ticket_id,json=ticketId,proto3)
}

#TicketTransition: {
	approverId?: string @go(ApproverId) @protobuf(1,bytes,opt,name=approver_id,json=approverId,proto3)
	action?:     string @go(Action) @protobuf(2,bytes,opt,proto3)
	oldStep?:    string @go(OldStep) @protobuf(3,bytes,opt,name=old_step,json=oldStep,proto3)
	step?:       string @go(Step) @protobuf(4,bytes,opt,proto3)
}
